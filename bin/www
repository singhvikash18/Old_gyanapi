
const http = require('http');
var socket = require('../socket')
const app = require('../app');

const debug = require('debug')('gyan_api:server');


const port = process.env.PORT ;
app.set("port", port);


const server = http.createServer(app);

server.listen(port)
server.on('error',onerror)
server.on('listining',onlisten)
socket.init(server);

function onerror(error){
    if(error.syscall !== 'listen'){
        throw error;
    }

    var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
      case "EACCES":
        console.error(bind + " requires elevated privileges");
        process.exit(1);
        break;
      case "EADDRINUSE":
        console.error(bind + " is already in use");
        process.exit(1);
        break;
      default:
        throw error;
    }
}

function onlisten() {
    var addr = server.address();
    var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
    debug("Listening on " + bind);
    logger.info("Server is running on port: " + addr.port);
    // socket.init(server);
  }